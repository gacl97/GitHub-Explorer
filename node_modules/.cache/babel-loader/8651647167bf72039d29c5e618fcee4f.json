{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/Documentos/GoStack11.0/Modulo3/primeiro-projeto-react/src/pages/Repository/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Header, RepositoryInfo, Issues } from './styles';\n\nconst Repository = () => {\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  const {\n    params\n  } = useRouteMatch();\n  useEffect(() => {\n    api.get(`repos/${params.repositoryId}`).then(response => {\n      setRepository(response.data);\n    });\n    api.get(`repos/${params.repositoryId}/issues`).then(response => {\n      setIssues(response.data);\n    });\n  }, [params.repositoryId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiChevronLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), \"Voltar\")), repository && /*#__PURE__*/React.createElement(RepositoryInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, repository.description))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, repository.stargazers_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Stars\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, repository.forks_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Forks\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, repository.open_issues_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Issues abertas\")))), /*#__PURE__*/React.createElement(Issues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, issues.map(() => /*#__PURE__*/React.createElement(Link, {\n    key: issues.id,\n    to: issues.ht,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"repository.full_name\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"repository.description\"))))));\n};\n\nexport default Repository;","map":{"version":3,"sources":["/home/gustavo/Documentos/GoStack11.0/Modulo3/primeiro-projeto-react/src/pages/Repository/index.tsx"],"names":["React","useState","useEffect","useRouteMatch","Link","FiChevronLeft","api","Header","RepositoryInfo","Issues","Repository","repository","setRepository","issues","setIssues","params","get","repositoryId","then","response","data","logoImg","owner","avatar_url","login","full_name","description","stargazers_count","forks_count","open_issues_count","map","id","ht"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repositoryId: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repositoryId}`).then((response) => {\n      setRepository(response.data);\n    });\n    api.get(`repos/${params.repositoryId}/issues`).then((response) => {\n      setIssues(response.data);\n    });\n  }, [params.repositoryId]);\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"Github Explorer\" />\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map(() => (\n          <Link key={issues.id} to={issues.ht}>\n            <div>\n              <strong>repository.full_name</strong>\n              <p>repository.description</p>\n            </div>\n          </Link>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}