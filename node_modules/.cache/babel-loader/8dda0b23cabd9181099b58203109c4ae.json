{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/Documentos/GoStack11.0/Modulo3/primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\n\nconst Dashboard = () => {\n  const [newRepository, setNewRepository] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handdleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepository) {\n      setInputError('Digite autor/nome do repositório.');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepository}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepository('');\n      setInputError('');\n    } catch (error) {\n      setInputError('Erro na busca por esse repositório.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Explore reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: Boolean(inputError),\n    onSubmit: handdleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepository,\n    onChange: event => setNewRepository(event.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: \"github profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/gustavo/Documentos/GoStack11.0/Modulo3/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Error","Dashboard","newRepository","setNewRepository","inputError","setInputError","repositories","setRepositories","handdleAddRepository","event","preventDefault","response","get","repository","data","error","logoImg","Boolean","target","value","map","full_name","owner","avatar_url","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,EAAoCC,KAApC,QAAiD,UAAjD;;;AAYA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAec,oBAAf,CACEC,KADF,EAEiB;AACfA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACR,aAAL,EAAoB;AAClBG,MAAAA,aAAa,CAAC,mCAAD,CAAb;AACA;AACD;;AAED,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAJ,CAAqB,SAAQV,aAAc,EAA3C,CAAvB;AAEA,YAAMW,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAP,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AACAV,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KARD,CAQE,OAAOU,KAAP,EAAc;AACdV,MAAAA,aAAa,CAAC,qCAAD,CAAb;AACD;AACF;;AAED,sBACE,uDACE;AAAK,IAAA,GAAG,EAAEW,OAAV;AAAmB,IAAA,GAAG,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,eAIE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,OAAO,CAACb,UAAD,CAAvB;AAAqC,IAAA,QAAQ,EAAEI,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEN,aADT;AAEE,IAAA,QAAQ,EAAGO,KAAD,IAAWN,gBAAgB,CAACM,KAAK,CAACS,MAAN,CAAaC,KAAd,CAFvC;AAGE,IAAA,WAAW,EAAC,iCAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CAJF,EAaGf,UAAU,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,UAAR,CAbjB,eAeE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACc,GAAb,CAAkBP,UAAD,iBAChB;AAAG,IAAA,GAAG,EAAEA,UAAU,CAACQ,SAAnB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAER,UAAU,CAACS,KAAX,CAAiBC,UAA3B;AAAuC,IAAA,GAAG,EAAC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASV,UAAU,CAACQ,SAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,UAAU,CAACW,WAAf,CAFF,CAFF,eAME,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CAfF,CADF;AA8BD,CA1DD;;AA4DA,eAAevB,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from '../../assets/logo.svg';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepository, setNewRepository] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handdleAddRepository(\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!newRepository) {\n      setInputError('Digite autor/nome do repositório.');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepository}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepository('');\n      setInputError('');\n    } catch (error) {\n      setInputError('Erro na busca por esse repositório.');\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no Github</Title>\n\n      <Form hasError={Boolean(inputError)} onSubmit={handdleAddRepository}>\n        <input\n          value={newRepository}\n          onChange={(event) => setNewRepository(event.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <a key={repository.full_name} href=\"test\">\n            <img src={repository.owner.avatar_url} alt=\"github profile\" />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}